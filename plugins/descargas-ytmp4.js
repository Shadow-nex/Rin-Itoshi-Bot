import fetch from "node-fetch"

let handler = async (m, { conn, text }) => {
  if (!text) return m.reply("üåø Ingresa un enlace de *YouTube* para descargar el video.")

  try {
    m.react("‚è≥")

    let api = `https://apis-starlights-team.koyeb.app/starlight/youtube-mp4?url=${encodeURIComponent(text)}&format=360p`
    let res = await fetch(api)
    let json = await res.json()

    if (!json.dl_url) return m.reply("‚ùå No se pudo obtener el enlace de descarga. Intenta con otro video.")

    let { title, author, thumbnail, quality, dl_url } = json

    // Mensaje decorado
    let caption = `
‚ï≠‚îÅ‚îÅ‚îÅ„Äî ùêòùêéùêîùêìùêîùêÅùêÑ ùêïùêàùêÉùêÑùêé üé¨ „Äï‚îÅ‚îÅ‚¨£
‚îÉ üåø *T√≠tulo:* ${title}
‚îÉ üë§ *Autor:* ${author}
‚îÉ üìπ *Calidad:* ${quality}
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¨£
> üß© *Descarga completada con √©xito.*
`

    await conn.sendMessage(m.chat, {
      video: { url: dl_url },
      caption,
      mimetype: "video/mp4",
      fileName: `${title}.mp4`,
      contextInfo: {
        externalAdReply: {
          title: title,
          body: author,
          thumbnailUrl: thumbnail,
          sourceUrl: text,
          mediaType: 1,
          renderLargerThumbnail: true
        }
      }
    }, { quoted: m })

    m.react("‚úÖ")

  } catch (e) {
    console.error(e)
    m.reply("‚ö†Ô∏è Error al procesar la descarga. Intenta nuevamente m√°s tarde.")
    m.react("‚ùå")
  }
}

handler.help = ["ytmp4"]
handler.tags = ["downloader"]
handler.command = ["ytmp4"]

export default handler