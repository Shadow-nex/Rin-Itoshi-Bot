import moment from 'moment-timezone';
import PhoneNumber from 'awesome-phonenumber';
import fetch from 'node-fetch';
import { xpRange } from '../lib/levelling.js';

let handler = async (m, { conn, args, usedPrefix }) => {
    try {

        let userId;
        if (m.quoted && m.quoted.sender) userId = m.quoted.sender;
        else if (m.mentionedJid && m.mentionedJid.length > 0) userId = m.mentionedJid[0];
        else userId = m.sender;

        if (!global.db.data.users) global.db.data.users = {};
        if (!global.db.data.characters) global.db.data.characters = {};
        if (!global.db.data.users[userId]) global.db.data.users[userId] = {};
        const user = global.db.data.users[userId];

        let name = await conn.getName(userId).catch(() => userId.split('@')[0]);
        let cumpleanos = user.birth || 'Sin especificar :< (#setbirth)';
        let genero = user.genre || 'Sin especificar';
        let pareja = user.marry;
        let casado = pareja ? (global.db.data.users[pareja]?.name || await conn.getName(pareja).catch(() => pareja.split('@')[0])) : 'Nadie';
        let description = user.description || 'Sin descripción :v';
        let exp = user.exp || 0;
        let nivel = user.level || 0;
        let coin = user.coin || 0;
        let bank = user.bank || 0;
        let totalCoins = coin + bank;
        let country = user.country || 'Desconocido';
        let phone = new PhoneNumber(userId, 'PE').getNumber('international');

        const sorted = Object.entries(global.db.data.users)
            .map(([k, v]) => ({ ...v, jid: k }))
            .sort((a, b) => (b.level || 0) - (a.level || 0));
        const rank = sorted.findIndex(u => u.jid === userId) + 1;
        const xpData = xpRange(nivel, global.multiplier);
        const progreso = `${exp - xpData.min} => ${xpData.xp} _(${Math.floor(((exp - xpData.min) / xpData.xp) * 100)}%)_`;

        const premium = user.premium || global.prems.map(v => v.replace(/\D+/g, '') + '@s.whatsapp.net').includes(userId);
        const isLeft = premium ? (global.prems.includes(userId.split('@')[0]) ? 'Permanente' : (user.premiumTime ? await formatTime(user.premiumTime - Date.now()) : '—')) : '—';

        const favId = user.favorite;
        const favLine = favId && global.db.data.characters?.[favId] ? `\n๑ Claim favorito » *${global.db.data.characters[favId].name || '???'}*` : '';
        const ownedIDs = Object.entries(global.db.data.characters).filter(([, c]) => c.user === userId).map(([id]) => id);
        const haremCount = ownedIDs.length;
        const haremValue = ownedIDs.reduce((acc, id) => {
            const char = global.db.data.characters[id] || {};
            const value = typeof char.value === 'number' ? char.value : 0;
            return acc + value;
        }, 0);

        const perfil = await conn.profilePictureUrl(userId, 'image')
            .catch(_ => 'https://raw.githubusercontent.com/The-King-Destroy/Adiciones/main/Contenido/1745522645448.jpeg');

        const profileText = `
      🔮 𝐏𝐄𝐑𝐅𝐈𝐋 𝐂𝐎𝐒𝐌𝐈𝐂𝐎 🔮
   ✧ ˚₊ ⊹ Rin Itoshi Bot ⊹ ₊˚ ✧

🌟 *Identidad Estelar:* @${userId.split('@')[0]}
🌙 *Nombre Arcano:* ${name}
🌀 *Esencia Vital:* _${description}_

⚙️ 𝐂𝐎𝐍𝐅𝐈𝐆𝐔𝐑𝐀𝐂𝐈𝐎𝐍 𝐄𝐒𝐏𝐈𝐑𝐈𝐓𝐔𝐀𝐋
🎂 *Edad Estelar:* ${user.age || 'Incierta'}
📆 *Ciclo Cósmico:* ${cumpleanos}
⚧️ *Polaridad:* ${genero}
💖 *Vínculo Álmico:* ${casado}
🌍 *Origen Estelar:* ${country}
📱 *Contacto:* ${phone}

✦ 𝐑𝐄𝐂𝐔𝐑𝐒𝐎𝐒 ✦
🪙 *Monedas Cósmicas:* ${coin.toLocaleString()}
🏦 *Banco Cósmico:* ${bank.toLocaleString()}
🌷 *Nivel Dimensional:* ${nivel}
🌿 *Exp Cósmica:* ${exp.toLocaleString()}
➨ Progreso » *${progreso}*
# Puesto » *#${rank}*
🛡️ *Rango:* ${user.role || 'Sin Rango'}
🔮 *Premium Cósmico:* ${premium ? `🟢 Activo (*${isLeft}*)` : '🔴 Inactivo'}

ꕥ Harem » *${haremCount}*
♤ Valor total » *${haremValue.toLocaleString()}*${favLine}
❒ Coins totales » *${totalCoins.toLocaleString()}*
❒ Comandos totales » *${user.commands || 0}*
`;

        await conn.sendMessage(m.chat, {
            image: { url: perfil },
            caption: profileText.trim(),
            mentions: [userId],
            contextInfo: {
                externalAdReply: {
                    title: '✧ Perfil Cósmico ✧',
                    body: '',
                    thumbnailUrl: perfil,
                    mediaType: 1,
                    showAdAttribution: true,
                    renderLargerThumbnail: true
                }
            }
        }, { quoted: m });
}

handler.help = ['profile'];
handler.tags = ['rg'];
handler.command = ['profile', 'perfil'];
handler.group = true;

export default handler;

async function formatTime(ms) {
    let s = Math.floor(ms / 1000), m = Math.floor(s / 60), h = Math.floor(m / 60), d = Math.floor(h / 24);
    let months = Math.floor(d / 30), weeks = Math.floor((d % 30) / 7);
    s %= 60; m %= 60; h %= 24; d %= 7;
    let t = months ? [`${months} mes${months > 1 ? 'es' : ''}`] :
            weeks ? [`${weeks} semana${weeks > 1 ? 's' : ''}`] :
            d ? [`${d} día${d > 1 ? 's' : ''}`] : [];
    if (h) t.push(`${h} hora${h > 1 ? 's' : ''}`);
    if (m) t.push(`${m} minuto${m > 1 ? 's' : ''}`);
    if (s) t.push(`${s} segundo${s > 1 ? 's' : ''}`);
    return t.length > 1 ? t.slice(0, -1).join(' ') + ' y ' + t.slice(-1) : t[0];
}